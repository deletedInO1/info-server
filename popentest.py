import subprocess
import threading
import queue

# Pfad zur ausführbaren Datei
import time

executable_path = "py popentest_cmd.py"

# Starten des Prozesses
process = subprocess.Popen(executable_path, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)

# Funktion zum Senden von Input
def send_input(input_text):
    process.stdin.write(input_text + '\n')
    process.stdin.flush()

# Funktion zum kontinuierlichen Auslesen des Outputs
def read_output(output_queue):
    while True:
        output_line = process.stdout.readline().strip()
        if not output_line:
            break
        print(output_line)

# Queue zum Speichern des Outputs
output_queue = queue.Queue()

# Starten des Threads zum Lesen des Outputs
output_thread = threading.Thread(target=read_output, args=(output_queue,))
output_thread.start()

# Hier können Sie Ihre Inputs zu verschiedenen Zeiten senden
send_input("Input 1")
time.sleep(1)  # Warten Sie 1 Sekunde
send_input("Input 2")
time.sleep(2)  # Warten Sie 2 Sekunden
send_input("Input 3")

# Beenden des Prozesses, indem Sie "stop" senden
send_input("stop")

# Warten auf das Ende des Output-Threads
output_thread.join()

# Lesen und Ausgeben des Outputs zwischen den Inputs
while not output_queue.empty():
    output_line = output_queue.get()
    print(output_line)

# Warten, bis der Prozess beendet ist
process.wait()

# Schließen Sie die Ein- und Ausgabe
process.stdin.close()
process.stdout.close()
process.stderr.close()